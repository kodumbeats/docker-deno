FROM ubuntu:18.04

ARG DENO_VERSION
ARG RUSTY_V8_VERSION

SHELL ["/bin/bash", "-c"]

RUN apt-get update -y
RUN DEBIAN_FRONTEND="noninteractive" TZ="Europe/London" apt-get install -y python curl build-essential unzip golang-github-pelletier-go-toml jq python3-pip
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

RUN pip3 install tomlq

RUN if [ "${DENO_VERSION:0:6}" == "canary" ]; then \
       curl -fsSL "https://github.com/denoland/deno/archive/${DENO_VERSION:7}.zip" -o deno.zip ; \
    else \
        curl -fsSL "https://github.com/denoland/deno/archive/${DENO_VERSION}.zip" -o deno.zip ; \
    fi
RUN unzip deno.zip
RUN rm deno.zip

RUN mv /deno-* /deno || true

WORKDIR /deno

ENV PATH="/root/.cargo/bin:${PATH}"

RUN rustup target add wasm32-unknown-unknown
RUN rustup target add wasm32-wasi 

RUN mkdir -p /deno/target/{,aarch64-unknown-linux-gnu}/release/gn_out/obj

RUN curl -fL "https://github.com/denoland/rusty_v8/releases/download/${RUSTY_V8_VERSION}/librusty_v8_release_aarch64-unknown-linux-gnu.a" \
    -o "/deno/target/release/gn_out/obj/librusty_v8.a"

RUN cp /deno/target/release/gn_out/obj/librusty_v8.a /deno/target/aarch64-unknown-linux-gnu/release/gn_out/obj/librusty_v8.a
RUN [ "$(file -bi /deno/target/release/gn_out/obj/librusty_v8.a)" == "application/x-archive; charset=binary" ] && echo "librusty_v8.a was downloaded correctly (Size is $(du -h /deno/target/release/gn_out/obj/librusty_v8.a))" || false

RUN cargo build -vv --target aarch64-unknown-linux-gnu --release
